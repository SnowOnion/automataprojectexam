#summary 自动机的建模工具。

= Introduction =

第一题，第二组。自动机的建模工具。

= Details =
组员：
    贾伟昊
    赵小卓
    娄  剑
项目名称：AutomatonDesigner
SVN所属文件夹：12AutomatonDesigner


= 自动机建模工具功能设计 =

    依据助教所给文档的要求，我们期望最终可以实现一个自动机建模的开放平台，亦即我们实现自动机建模的基本功能，同时又对其他人想要实现的功能提供扩展接口，以方便其以插件的形式对本工具的功能进行扩展。此建模系统初步设想的功能包括：
 # 自动机的图形化显示。即可以使用状态转换图和状态转换表的形式展现一个自动机，并且提供给用户新建、修改和保存的功能。
 # 对于XML形式自动机读取和存储的支持。如果使用JAVA对象的序列化方式可以直接将文件输出为XML的形式进行保存和读取操作，但是为了可以更方便用户手动修改XML文件，并且和其他系统相兼容，我们采用预先定义好的DTD来执行自动机对象和XML文件之间的转化。
 # 支持自动机类型的定义（主要包括DFA、NFA和PDA三种），并且针对不同的自动机提供不同的工具箱和输入限制。

    对于界面中需要定义的操作等在此处不进行详细的讨论，将在详细设计阶段进行分析与描述。但界面的大略样式主要提供菜单栏、工具栏和状态栏三个基本的部分，同时提供包含用于绘制自动机的各种组件的工具箱，多标签显示形式的显示界面，依据用户选择而变化内容的属性栏。对于其他功能界面，大部分将以弹出模态/非模态对话框的形式提供给用户。

    对于具体的操作，可以参照Visio中的部分操作来设计。

= 数据模型设计 =

    在本系统中将要使用用于表现一个自动机的数据模型主要有三种：XML形式、实体对象形式和图形对象模式。其中XML文件主要提供外存持久化保存的功能，图形化显示形式主要是提供给用户图形化显示、创建和修改等功能，而自动机实体对象形式是整个系统运行时维护的主要核心数据。当用户从XML文件加载某个自动机模型到程序时，系统首先通过XML文件解析得到对象化形式的自动机实体对象，然后通过这个实体对象构造可以显示给用户的图形对象，并且绘制在工作区域，属性栏显示整个自动机的属性信息。系统初始计划部提供给用户通过图形界面修改自动机基本属性功能，而主要通过属性栏进行修改。而和属性栏关联的是内存中的自动机实体对象，因此修改完对应的实体对象后，只需要重新修改（生成）图形化显示对象，然后刷新界面即可。而用户新建自动机、新建/删除状态、新建/删除转换箭头等操作则需要将变化对应转换到对于自动机实体对象的修改上。

= 使用技术探讨 =

    本系统将使用JAVA语言实现，JDK版本选择6.0，开发时使用的IDE工具采用Eclipse3.5，同时为了方便系统界面设计可以选择使用SWT Designer工具。

    为了实现对于插件形式的扩展支持，整个系统选择Eclipse下的RCP（Rich Client Platform）项目形式开发。使用RCP技术开发的系统是一个像Eclipse一样可扩展的平台，其他开发者使用Eclipse工具建立plug-in项目进行开发即可以插件的形式整合到平台中。虽然这对于其他开发者的扩展难度有所增加，即要学习Eclipse插件的开发方法，但考虑到RCP已经是一套成熟公认的平台，均衡开发难度和开发时间等问题的考虑，使用RCP技术是最好的选择。

    在图形化的开发中，将使用SWT和JFace的控件，XML的处理可以使用的技术很多，包括SAX、DOM和JDOM等，这个由负责这个模块的组员进行比较和选择，同时对于存储自动机的XML文件的DTD也由该组员进行定义。如需进行日志记录，则使用Log4j。

    其他没有考虑到的技术经过讨论后在详细设计中给出。